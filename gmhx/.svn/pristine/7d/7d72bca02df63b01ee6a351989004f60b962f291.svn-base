package com.gome.gmhx.jbpm;

import java.util.ArrayList;
import java.util.List;

import org.jbpm.api.ProcessInstance;
import org.jbpm.api.model.OpenExecution;
import org.jbpm.api.task.Assignable;
import org.jbpm.api.task.AssignmentHandler;
import org.springframework.stereotype.Service;
public class JbpmAuthorityService implements AssignmentHandler{
	
	
	@Override
	public void assign(Assignable assignable, OpenExecution execution)
			throws Exception {
		ProcessInstance pi = execution.getProcessInstance();
		String currentStatus = execution.getActivity().getName();
		String entityId = pi.getKey().split("-")[1];
		String processDefinitionKey = execution.getProcessDefinitionId().split("-")[0];
		List<String> users = this.findCandidateUser(entityId, currentStatus, processDefinitionKey);
		for(String user:users){
			assignable.addCandidateUser(user);
		}
	}
	
	/**
	* @Title: findCandidateUser
	* @Description: TODO(这里用一句话描述这个方法的作用)
	* @param @param workEntityId
	* @param @param workEntityType
	* @param @return 设定文件
	* @return String 返回类型
	* @throws
	*/
	public List<String> findCandidateUser(String entityId,String currentStatus,String processDefinitionKey){
		JbpmParticipantHandler handler = JbpmParticipantHandlerFactory.getInstance(processDefinitionKey);
		List<JbpmParticipant> jbpmParticipants = handler.getParticipants(entityId,currentStatus);
		List<String> users = new ArrayList<String>();
		for(JbpmParticipant jbpmParticipant:jbpmParticipants){
			users.add(jbpmParticipant.workFlowUserId());
		}
		return users;
	}

}
