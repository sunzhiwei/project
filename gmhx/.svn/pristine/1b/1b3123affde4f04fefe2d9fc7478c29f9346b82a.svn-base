package com.gome.gmhx.controller.orgmanage;

import java.util.Date;
import java.util.List;
import java.util.Map;

import javax.annotation.Resource;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.apache.commons.lang.StringUtils;
import org.springframework.format.annotation.DateTimeFormat;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.servlet.ModelAndView;

import com.gome.common.page.Page;
import com.gome.common.util.BeanMapUtils;
import com.gome.common.util.JsonUtil;
import com.gome.common.util.UUIDGenerator;
import com.gome.gmhx.entity.HxLimit;
import com.gome.gmhx.entity.SysUser;
import com.gome.gmhx.service.orgmanage.HxLimitService;

@Controller
@RequestMapping(value="/hxLimit")
public class HxLimitController {
	@Resource
	private HxLimitService hxLimitService;
	
	@RequestMapping(value="/limitView")
	public String limitView(){
		return "orgmanage/hxLimit/limitList";
	}
	
	@RequestMapping(value="/getLimitPageList", produces="text/plain;charset=utf-8")
	@ResponseBody
	public String getLimitPageList(HttpServletResponse response, Page page, HxLimit limit) throws Exception{
		page.setParam(limit);
		List<Map<String, Object>> list = hxLimitService.getLimitPageList(page);
		return JsonUtil.writeListToDataGrid(page.getTotalResult(), list);
	}
	
	@RequestMapping(value="/addView")
	public String addView(){
		return "orgmanage/hxLimit/limitAdd";
	}
	
	@RequestMapping(value="/addLimit")
	@ResponseBody
	public String addLimit(HxLimit limit,HttpServletRequest request) {
        try {
        	String limitId = UUIDGenerator.getUUID();
        	limit.setLimitId(limitId);//设置主键
        	limit.setLimitOperateDate(new Date());
        	SysUser sysuser = (SysUser) request.getSession().getAttribute("user");
        	if(sysuser!=null){
        		limit.setLimitOperateId(sysuser.getUserName());
        	}
        	limit.setLimitAddTag("1");//增
        	limit.setLimitOperateType("0");//手动
        	limit.setLimitOperateReason("0");//初始化
        	
        	hxLimitService.addLimit(limit);
            return "{\"flag\" : \"success\"}";
        } catch (Exception e) {
            e.printStackTrace();
        }
        return null;
    }
	
	@RequestMapping(value="/updateView")
	public ModelAndView updateView(HttpServletRequest request){
		ModelAndView mav = new ModelAndView("orgmanage/hxLimit/limitUpdate");
		String limitId = request.getParameter("limitId");
		HxLimit limit = hxLimitService.getLimitById(limitId);
		mav.addObject("limit", limit);
		return mav;
	}
	
	@RequestMapping(value="/updateLimit")
	@ResponseBody
	public String updateLimit(HxLimit limit,HttpServletRequest request){
		try {
			if(limit!=null){
        		String limitIdTemp = limit.getLimitId();
        		if(StringUtils.isNotBlank(limitIdTemp)){
        			limit.setLimitOriginId(limitIdTemp);//关联初始化的记录主键
        		}
        	}
			String limitId = UUIDGenerator.getUUID();
        	limit.setLimitId(limitId);//设置主键
			limit.setLimitOperateDate(new Date());
        	SysUser sysuser = (SysUser) request.getSession().getAttribute("user");
        	if(sysuser!=null){
        		limit.setLimitOperateId(sysuser.getUserName());
        	}
        	limit.setLimitOperateType("0");//手动
        	limit.setLimitOperateReason("1");//手动修改
			hxLimitService.addLimit(limit);
            return "{\"flag\" : \"success\"}";
        } catch (Exception e) {
            e.printStackTrace();
        }
        return null;
	}
	
	@RequestMapping(value="/showView")
	public ModelAndView showView(HttpServletRequest request){
		ModelAndView mav = new ModelAndView("orgmanage/hxLimit/limitShow");
		String limitId = request.getParameter("limitId");
		HxLimit limit = hxLimitService.getLimitById(limitId);
		mav.addObject("limit", limit);
		return mav;
	}
	
	@RequestMapping(value="/limitHistoryView")
	public String limitHistoryView(){
		return "orgmanage/hxLimit/limitListHistory";
	}
	
	@RequestMapping(value="/getLimitHistoryPageList", produces="text/plain;charset=utf-8")
	@ResponseBody
	public String getLimitHistoryPageList(HttpServletResponse response, Page page, HxLimit limit,@DateTimeFormat(pattern="yyyy-MM-dd")Date ksrq, @DateTimeFormat(pattern="yyyy-MM-dd")Date jsrq,HttpServletRequest request) throws Exception{
		Map<String, Object> map = BeanMapUtils.convertBean(limit);
		map.put("ksrq", ksrq);
		map.put("jsrq", jsrq);
		String limitId = request.getParameter("limitId");
		map.put("jsrq", jsrq);
		map.put("limitId", limitId);
		page.setParam(map);
		List<Map<String, Object>> list = hxLimitService.getLimitHistoryPageList(page);
		return JsonUtil.writeListToDataGrid(page.getTotalResult(), list);
	}
}